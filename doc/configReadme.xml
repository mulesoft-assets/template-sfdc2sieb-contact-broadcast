<?xml version="1.0"?>
<configuration>
	<placeholders>
		<placeholder id="template_name">Salesforce to Siebel Contact Broadcast</placeholder>
	</placeholders>
	<sections>
		<section id="use_case">
I want to synchronize contacts from Salesforce to Siebel.

This Template should serve as a foundation for the process of migrating contacts from Salesforce to Siebel, being able to specify filtering criteria and desired behavior when a contact already exists in the Siebel instance. 

As implemented, this Template leverages the [Batch Module](http://www.mulesoft.org/documentation/display/current/Batch+Processing).
The batch job is divided into Input, Process and On Complete stages.
During the Input stage, the Template will query Salesforce for all the existing Contacts that match the filtering criteria.
In the Process stage, if the *accountSyncPolicy* is set to 'syncAccount', the Account under which the Contact belongs is created in the Siebel instance (if it does not exist).
The last step of the Process stage will create/update contacts in Siebel.
Finally during the On Complete stage the Template will output statistics data into the console. 
		</section>
		<section id="considerations">
<![CDATA[
To make this Anypoint Template run, there are certain preconditions that must be considered. All of them deal with the preparations in both source (Salesforce) and destination (Siebel) systems, that must be made in order for all to run smoothly. 
**Failling to do so could lead to unexpected behavior of the template.**
]]>
		</section>
		<section id="sieb_dst">
<![CDATA[
In order to make the Siebel connector work smoothly you have to provide the siebel jars (Siebel.jar, SiebelJI_enu.jar) of correct version of that work with your Siebel installation.
]]>
		</section>
		<section id="application_configuration">
		<![CDATA[
+ poll.frequencyMillis `10000`  
These are the miliseconds (also different time units can be used) that will run between two different checks for updates in Salesforce

+ watermark.default.expression `2015-10-23T11:00:00.000Z`  
This property is an important one, as it configures what should be the start point of the synchronization. The date format accepted in SFDC Query Language is either *YYYY-MM-DDThh:mm:ss+hh:mm* or you can use Constants. [More information about Dates in SFDC](http://www.salesforce.com/us/developer/docs/officetoolkit/Content/sforce_api_calls_soql_select_dateformats.htm)
+ poll.startDelayMillis `100`

**Note:** the property **account.sync.policy** can take any of the two following values: 

+ **empty_value**: if the propety has no value assigned to it then application will do nothing in respect to the account and it'll just move the contact over.
+ **syncAccount**: it will try to create the contact's account should this is not present in the Siebel instance.

### Salesforce Connector configuration
+ sfdc.username `bob.dylan@sfdc`
+ sfdc.password `DylanPassword123`
+ sfdc.securityToken `avsfwCUl7apQs56Xq2AKi3X`
+ sfdc.url `https://login.salesforce.com/services/Soap/u/32.0`

### Oracle Siebel Connector configuration
+ sieb.user `user`
+ sieb.password `secret`
+ sieb.server `server`
+ sieb.serverName `serverName`
+ sieb.objectManager `objectManager`
+ sieb.port `2321`
]]>
		</section>
		<section id="api_calls">
		<![CDATA[
Salesforce imposes limits on the number of API Calls that can be made. However, in this template, only one call per poll cycle is done to retrieve all the information required.
]]>
		</section>
		<section id="default_business_logic_xml">
		<![CDATA[
Functional aspect of the Anypoint Template is implemented in this XML, directed by a batch job that will be responsible for creations/updates. The severeal message processors constitute four high level actions that fully implement the logic of this Anypoint Template:

1. Job execution is invoked from triggerFlow (endpoints.xml) everytime there is a new query executed asking for created/updated Contacts.
2. During the Process stage, if syncAccountPolicy is set to `syncAccount`, Account is synced to Siebel instance.
3. The last step of the Process stage will create/update contacts in Siebel.
Finally during the On Complete stage the Anypoint Template will log output statistics data into the console.
]]>
		</section>
		<section id="default_endpoints_xml">
		<![CDATA[
This file contains a flow containing the Poll that will periodically query Salesforce for updated/created Contacts that meet the defined criteria in the query and then executing the batch job process with the query results.
]]>
		</section>
	</sections>
</configuration>