<?xml version="1.0" encoding="UTF-8"?>

<mule 
	xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce"
	xmlns:os="http://www.mulesoft.org/schema/mule/os" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:batch="http://www.mulesoft.org/schema/mule/batch" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd
http://www.mulesoft.org/schema/mule/salesforce http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd">

	<flow name="schedulerFlow" doc:id="aff4106d-d2f6-4366-940a-a380dcb1cf73">
		<scheduler doc:name="Scheduler" doc:id="58b7c776-fbee-4753-9bea-f6cc3e037efd">
			<scheduling-strategy>
				<fixed-frequency frequency="${scheduler.frequency}"
					startDelay="${scheduler.start.delay}" />
			</scheduling-strategy>
		</scheduler>
		<flow-ref doc:name="queryFlow" doc:id="ada07859-8839-4751-9623-68a08d31a472"
			name="queryFlow" />
		<logger level="INFO" doc:name="Log Contacts to sync"
			doc:id="65934ef1-2939-4fab-bde9-1886331527ea" message="#['Contacts to sync: ' ++ write(payload)]" />
		<flow-ref name="businessLogicFlow" doc:name="businessLogicFlow"
			doc:id="e16bf02c-b833-47de-afd5-2329ce1fab2b" />
		<error-handler>
			<on-error-propagate enableNotifications="true"
				logException="true" doc:name="On Error Propagate" doc:id="488b507d-e26c-4c56-8759-8bb4f6645d71"
				type="ANY">
				<flow-ref doc:name="errorHandlingFlow" doc:id="afdaf73c-0137-4d60-84f6-5c41234771a3"
					name="errorHandlingFlow" />
			</on-error-propagate>
		</error-handler>
	</flow>
	<flow name="queryFlow">
		<os:retrieve key="watermark" objectStore="watermarkStore"
			target="lastQueryTimestamp" doc:name="Retrieve lastQueryTimestamp">
			<os:default-value ><![CDATA[#[read(p('watermark.default.expression'))]]]></os:default-value>
		</os:retrieve>
		<salesforce:query
			doc:name="Query Contacts with filtering criteria from Salesforce"
			doc:id="b73e7afe-b4e2-44e7-b5f7-2a4a770c0eae" config-ref="Salesforce_Config">
			<salesforce:salesforce-query>SELECT Email, FirstName, LastName, Id,
				LastModifiedDate, HomePhone, Phone, MailingCity, MailingState,
				MailingCountry, MailingPostalCode, Title, Account.Id, Account.Name,
				Account.AccountNumber, Account.AccountSource, Account.AnnualRevenue,
				Account.BillingCity, Account.BillingCountry,
				Account.BillingPostalCode, Account.BillingState,
				Account.BillingStreet, Account.Description, Account.Fax,
				Account.Industry, Account.NumberOfEmployees, Account.Ownership,
				Account.ParentId, Account.Phone, Account.Rating,
				Account.ShippingCity, Account.ShippingCountry,
				Account.ShippingPostalCode, Account.ShippingState,
				Account.ShippingStreet, Account.Sic, Account.SicDesc, Account.Site,
				Account.TickerSymbol, Account.Type, Account.Website FROM Contact
				WHERE LastModifiedDate &gt; :lastModifiedDate AND Email != null
		</salesforce:salesforce-query>
			<salesforce:parameters><![CDATA[#[output application/java
---
{
	"lastModifiedDate" : vars.lastQueryTimestamp
}]]]></salesforce:parameters>
		</salesforce:query>
		<logger level="INFO" doc:name="Query Contacts from  Salesforce"
			doc:id="08f68fa6-4350-4e49-86c3-0736bb52ecc1" message="#[payload]" />
		<os:store key="watermark" failIfPresent="false"
			failOnNullValue="false" objectStore="watermarkStore" doc:name="Store lastQueryTimestamp">
			<os:value>#[max(payload map $.LastModifiedDate)]</os:value>
		</os:store>

	</flow>
</mule>


        
